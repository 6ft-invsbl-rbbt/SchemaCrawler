SchemaCrawler 15.06.01
Database schema discovery and comprehension tool
Copyright (c) 2000-2019, Sualeh Fatehi <sualeh@hotmail.com>.

You can search for database schema objects using regular expressions, 
and output the schema and data in a readable text format. You can find 
potential schema design issues with lint. The output serves for 
database documentation is designed to be diff-ed against other database 
schemas. SchemaCrawler also generates schema diagrams.

System Information:
Windows 10 10.0
Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12

Available SchemaCrawler Commands:
brief - Display schema information at different levels of detail
count - Display results of table queries
details - Display schema information at different levels of detail
dump - Display results of table queries
list - Display schema information at different levels of detail
quickdump - Display results of table queries
schema - Display schema information at different levels of detail
serialize - Create an offline catalog snapshot


----- Logging Options ---------------------------------------------------------
Turn logging on or off

      --log-level=<loglevel>
         Set log level using one of OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER,
           FINEST, ALL
         Optional, defaults to OFF


----- Configuration Options ---------------------------------------------------
Load SchemaCrawler configuration from the classpath and file

SchemaCrawler configuration reads a resource called schemacrawler.config.
properties from the CLASSPATH, which includes the lib/ folder. You can modify
the default settings in this file.

The order of loading configuration settings is:
1. From a CLASSPATH resource called schemacrawler.config.properties
2. Which can be overridden by settings in a configuration file (see below)
3. Which can be overridden by other command-line options

Command-line options will override configuration file options.
  -g, --config-file=<configfile>
         Read SchemaCrawler configuration properties from <configfile>
         <configfile> is the full path to the configuration file
         Optional, uses the default schemacrawler.config.properties file in the
           current directory, or in-built default options


----- Connection Options ------------------------------------------------------
Database connection options

Connect to a database, using a JDBC URL, or for databases with SchemaCrawler
plugins, with a server type, host, port and database
      --database=<database>
                          Database name
      --host=<host>       Database server host
      --password=<passwordProvided>
                          Database password
      --password:env=<passwordEnvironmentVariable>
                          Database password, from an environmental variable value
      --password:file=<passwordFile>
                          Database password, read from a file
      --password:prompt   Database password, prompted from the console
      --port=<port>       Database server port
      --server=<databaseSystemIdentifier>
                          Database server type
      --url=<connectionUrl>
                          Database connection string
      --urlx=<String=String>
                          JDBC URL additional properties
      --user=<user>       Database user name


----- Filter Options ----------------------------------------------------------
Filter database object metadata

      --children=<children> Number of generations of descendents for the tables
                              selected by grep
      --no-empty-tables     Include only tables that have rows of data
      --parents=<parents>   Number of generations of ancestors for the tables
                              selected by grep


----- Limit Options -----------------------------------------------------------
Limit database object metadata

      --exclude-columns=<excludecolumns>
                            <excludecolumns> is a regular expression to match fully
                              qualified column names, in the form "CATALOGNAME.
                              SCHEMANAME.TABLENAME.COLUMNNAME" - for example,
                              --exclude-columns=.*\.STREET|.*\.PRICE matches columns
                              named STREET or PRICE in any table
                            Columns that match the pattern are not displayed
                            Optional, default is to show all columns
      --exclude-in-out=<excludeinout>
                            <excludeinout> is a regular expression to match fully
                              qualified parameter names - for example,
                              --exclude-in-out=@p1|@p2 matches parameters named @p1
                              or @p2 in any procedure
                            Parameters that match the pattern are not displayed
                            Optional, default is to show all parameters
      --routine-types=<routinetypes>[,<routinetypes>...]
                            <routinetypes> is a comma-separated list of routine
                              types of PROCEDURE,FUNCTION
                            Optional, defaults to PROCEDURE,FUNCTION
      --routines=<routines> <routines> is a regular expression to match fully
                              qualified stored procedure or function names, in the
                              form "CATALOGNAME.SCHEMANAME.ROUTINENAME" - for
                              example, --routines=.*\.C.*|.*\.P.* matches any
                              routines whose names start with C or P
                            Routines that do not match the pattern are not displayed
                            Use --routines= to omit routines
                            Optional, defaults to showing no routines
      --schemas=<schemas>   <schemas> is a regular expression to match fully
                              qualified schema names, in the form "CATALOGNAME.
                              SCHEMANAME" - for example, --schemas=.*\.C.*|.*\.P.*
                              matches any schemas whose names start with C or P
                            Schemas that do not match the pattern are not displayed
                            Optional, defaults to showing all schemas
      --sequences=<sequences>
                            <sequences> is a regular expression to match fully
                              qualified sequence names, in the form "CATALOGNAME.
                              SCHEMANAME.SEQUENCENAME" - for example, --sequences=.
                              *\.C.*|.*\.P.* matches any sequences whose names start
                              with C or P
                            Sequences that do not match the pattern are not displayed
                            Use --sequences= to omit sequences
                            Sequences will only be shown when -infolevel=maximum
                            Optional, defaults to showing no sequences
      --synonyms=<synonyms> <synonyms> is a regular expression to match fully
                              qualified synonym names, in the form "CATALOGNAME.
                              SCHEMANAME.SYNONYMNAME" - for example, --synonyms=.*\.
                              C.*|.*\.P.* matches any synonyms whose names start
                              with C or P
                            Synonyms that do not match the pattern are not displayed
                            Synonyms will only be shown when -infolevel=maximum
                            Use --synonyms= to omit synonyms
                            Optional, defaults to showing no synonyms
      --table-types=<tabletypes>[,<tabletypes>...]
                            <tabletypes> is a comma-separated list of table types
                              supported by the database
                            If no value is specified, all types of tables are shown
                            Optional, defaults to TABLE,VIEW
      --tables=<tables>     <regular-expression> is a regular expression to match
                              fully qualified table names, in the form "CATALOGNAME.
                              SCHEMANAME.TABLENAME" - for example, --tables=.*\.C.*|.
                              *\.P.* matches any tables whose names start with C or P
                            Tables that do not match the pattern are not displayed
                            Use with care, since --tables= actually takes tables out
                              of consideration from the perspective of SchemaCrawler
                              - to filter tables, look into the grep options
                            Optional, defaults to showing all tables


----- Grep Options ------------------------------------------------------------
Grep for database object metadata

      --grep-columns=<grepcolumns>
                             grep for tables with column names matching pattern
      --grep-def=<grepdef>   grep for tables definitions containing pattern
      --grep-in-out=<grepinout>
                             grep for routines with parameter names matching pattern
      --invert-match         Invert the grep match
      --only-matching        Show only matching tables, and not foreign keys that
                               reference other non-matching tables


Show output
      --no-info             Whether to show database information
      --no-remarks          Whether to sort remarks
      --portable-names      Whether to use portable names
      --weak-associations   Whether to weak associations


Sort output
      --sort-columns    Whether to sort table columns
      --sort-in-out     Whether to routine parameters
      --sort-routines   Whether to sort routines
      --sort-tables     Whether to sort tables


Load database metadata
  -i, --info-level=<infoLevel>
         Determine the amount of database metadata retrieved


Execute SchemaCrawler command
      --output-format=<outputFormatValue>
                            Outfile format
  -c, --command=<command>   SchemaCrawler command
  -m, --title=<title>       Title for output
  -o, --output-file=<outputFile>
                            Outfile file path and name


